
@article{bonfieldHTSlibLibraryReading2021,
  title = {{{HTSlib}}: {{C}} Library for Reading/Writing High-Throughput Sequencing Data},
  shorttitle = {{{HTSlib}}},
  author = {Bonfield, James K and Marshall, John and Danecek, Petr and Li, Heng and Ohan, Valeriu and Whitwham, Andrew and Keane, Thomas and Davies, Robert M},
  date = {2021-01-29},
  journaltitle = {GigaScience},
  volume = {10},
  number = {2},
  pages = {giab007},
  issn = {2047-217X},
  doi = {10.1093/gigascience/giab007},
  url = {https://academic.oup.com/gigascience/article/doi/10.1093/gigascience/giab007/6139334},
  urldate = {2021-07-01},
  abstract = {Background: Since the original publication of the VCF and SAM formats, an explosion of software tools have been created to process these data files. To facilitate this a library was produced out of the original SAMtools implementation, with a focus on performance and robustness. The file formats themselves have become international standards under the jurisdiction of the Global Alliance for Genomics and Health. Findings: We present a software library for providing programmatic access to sequencing alignment and variant formats. It was born out of the widely used SAMtools and BCFtools applications. Considerable improvements have been made to the original code plus many new features including newer access protocols, the addition of the CRAM file format, better indexing and iterators, and better use of threading. Conclusion: Since the original Samtools release, performance has been considerably improved, with a BAM read-write loop running 5 times faster and BAM to SAM conversion 13 times faster (both using 16 threads, compared to Samtools 0.1.19). Widespread adoption has seen HTSlib downloaded {$>$}1 million times from GitHub and conda. The C library has been used directly by an estimated 900 GitHub projects and has been incorporated into Perl, Python, Rust, and R, significantly expanding the number of uses via other languages. HTSlib is open source and is freely available from htslib.org under MIT/BSD license. Keywords: samtools, bcftools, high-throughput sequencing, next generation sequencing, variant calling, data analysis.},
  langid = {english},
  file = {/home/kojix2/Zotero/storage/PVGB75II/Bonfield et al. - 2021 - HTSlib C library for readingwriting high-through.pdf}
}

@article{etheringtonBiosamtoolsPackageAnalysis2015,
  title = {Bio-Samtools 2: A Package for Analysis and Visualization of Sequence and Alignment Data with {{SAMtools}} in {{Ruby}}: {{Fig}}. 1.},
  shorttitle = {Bio-Samtools 2},
  author = {Etherington, Graham J. and Ramirez-Gonzalez, Ricardo H. and MacLean, Dan},
  date = {2015-08-01},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {31},
  number = {15},
  pages = {2565--2567},
  issn = {1367-4803, 1460-2059},
  doi = {10.1093/bioinformatics/btv178},
  url = {https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btv178},
  urldate = {2021-07-01},
  abstract = {Motivation: bio-samtools is a Ruby language interface to SAMtools, the highly popular library that provides utilities for manipulating high-throughput sequence alignments in the Sequence Alignment/Map format. Advances in Ruby, now allow us to improve the analysis capabilities and increase bio-samtools utility, allowing users to accomplish a large amount of analysis using a very small amount of code. bio-samtools can also be easily developed to include additional SAMtools methods and hence stay current with the latest SAMtools releases.},
  langid = {english},
  file = {/home/kojix2/Zotero/storage/ZBUW2XNU/Etherington et al. - 2015 - bio-samtools 2 a package for analysis and visuali.pdf}
}

@article{pedersenHtsnimScriptingHighperformance2018,
  title = {Hts-Nim: Scripting High-Performance Genomic Analyses},
  shorttitle = {Hts-Nim},
  author = {Pedersen, Brent S and Quinlan, Aaron R},
  editor = {Birol, Inanc},
  date = {2018-10-01},
  journaltitle = {Bioinformatics},
  volume = {34},
  number = {19},
  pages = {3387--3389},
  issn = {1367-4803, 1460-2059},
  doi = {10.1093/bioinformatics/bty358},
  url = {https://academic.oup.com/bioinformatics/article/34/19/3387/4990493},
  urldate = {2021-07-01},
  abstract = {Motivation: Extracting biological insight from genomic data inevitably requires custom software. In many cases, this is accomplished with scripting languages, owing to their accessibility and brevity. Unfortunately, the ease of scripting languages typically comes at a substantial performance cost that is especially acute with the scale of modern genomics datasets.},
  langid = {english},
  file = {/home/kojix2/Zotero/storage/PD4LMQST/Pedersen and Quinlan - 2018 - hts-nim scripting high-performance genomic analys.pdf}
}


